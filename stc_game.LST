C51 COMPILER V9.51   STC_GAME                                                              09/05/2018 15:34:55 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE STC_GAME
OBJECT MODULE PLACED IN stc_game.OBJ
COMPILER INVOKED BY: H:\Keil\C51\BIN\C51.EXE stc_game.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <stdlib.h>
   3          #include "music.h"
   4          #include "variable.h"
   5          #include "function.h"
   6          #define uint unsigned int
   7          #define uchar unsigned char
   8          
   9          //函数列表
  10          void gameScreen();
  11          void gameOver();
  12          uchar seg7encorder(uint num);
  13          void playmusic();
  14          void delay(unsigned int xms);
  15          uchar quyin(uchar tem);
  16          void init_sys();
  17          void init();
  18          
  19          /**********************
  20          void main() main function
  21          ***********************/
  22          void main()
  23          {
  24   1        init_sys();
  25   1        init();
  26   1        P0=0x00;
  27   1        playmusic();
  28   1        while(1);
  29   1      }
  30          
  31          void gameScreen(){
  32   1        
  33   1        //判断点击
  34   1        if(gameState == 0){
  35   2          if(KEY3 == 0){ show_b[6] &= 0xfe; }    //敲击上中下三个位置的音符
  36   2          if(KEY2 == 0){ show_b[6] &= 0xbf; }
  37   2          if(KEY1 == 0){ show_b[6] &= 0xf7; } 
  38   2          
  39   2          show_f[6] |= 0x36;  //敲击提示线
  40   2          
  41   2        }
  42   1        
  43   1        //数码管显示
  44   1        P0 = 0;
  45   1        flag = flag%9;
  46   1        led_sel = 0;
  47   1        if(flag < 8){
  48   2          P2 = weixuan[flag];
  49   2          P0 = show_f[flag];
  50   2        }else{
  51   2          led_sel=1;
  52   2          P0 = led;
  53   2          flag = -1;
  54   2        }
  55   1        
C51 COMPILER V9.51   STC_GAME                                                              09/05/2018 15:34:55 PAGE 2   

  56   1        flag++;
  57   1        count++;
  58   1        
  59   1      
  60   1        
  61   1        if(count == shift_time){ //移动
  62   2          switch(gameState){
  63   3            case 0:
  64   3                for(i=7;i>0;i--){
  65   4                  show_b[i] = show_b[i-1];
  66   4                  show_f[i] = show_b[i];
  67   4                }
  68   3                
  69   3                //生成随机数
  70   3                tmp =  rand()%3;
  71   3                switch(tmp){
  72   4                  case 0: next = 0x01; break;   //show_b[0] is an original resource used to copy musicode to next locat
             -ion.
  73   4                  case 1: next = 0x40; break;
  74   4                  case 2: next = 0x08; break;
  75   4                }
  76   3                show_b[0] = next;
  77   3                show_f[0] = show_b[0];
  78   3                count = 0;
  79   3                
  80   3                //判断是否击中
  81   3                if(show_b[7] != 0x00){
  82   4                    no_hit_t ++;
  83   4                    no_hit ++;
  84   4                    if(no_hit_t == 20){
  85   5                      no_hit_t = 0;
  86   5                      led = led>>1;
  87   5                      if(led == 0x00){
  88   6                        gameState = 1;
  89   6                        gameOver();
  90   6                      }
  91   5                  }
  92   4                }else{
  93   4                  hit++;
  94   4                }
  95   3                break;
  96   3              default:
  97   3                gameOver();
  98   3          }
  99   2        }
 100   1      }
 101          /**********************
 102          函数名称：gameOver()
 103          功能描述：游戏结束，显示击中与未击中次数
 104          入口参数：无
 105          出口参数：无
 106          备注：
 107          ***********************/
 108          void gameOver(){
 109   1        hit = (hit%1000)-7;  //减去移动前多算的七次
 110   1        no_hit = no_hit%1000;
 111   1        show_f[0] = 0x76;
 112   1        show_f[1] = seg7encorder(hit/100);
 113   1        show_f[2] = seg7encorder((hit%100)/10);
 114   1        show_f[3] = seg7encorder(hit%10);
 115   1        show_f[4] = 0x38;
 116   1        show_f[5] = seg7encorder(no_hit/100);
C51 COMPILER V9.51   STC_GAME                                                              09/05/2018 15:34:55 PAGE 3   

 117   1        show_f[6] = seg7encorder((no_hit%100)/10);
 118   1        show_f[7] = seg7encorder(no_hit%10);
 119   1      }
 120          
 121          /**********************
 122          函数名称：void tim1() interrupt 1
 123          功能描述：定时器0中断处理，重新装值，并把beep值取反，产生方波
 124          入口参数：无
 125          出口参数：无
 126          备注：
 127          ***********************/
 128          void tim1() interrupt 1           //计时器控制频率
 129          {
 130   1        TH0=timeh;
 131   1        TL0=timel;
 132   1        beep=~beep;
 133   1      }
 134          
 135          /**********************
 136          函数名称：void tim2() interrupt 3
 137          功能描述：定时器1中断处理,点亮led和数码管
 138          入口参数：无
 139          出口参数：无
 140          备注：
 141          ***********************/
 142          void tim2() interrupt 3   
 143          {
 144   1        TH1=(65536-925)/256;
 145   1        TL1=(65536-925)%256;
 146   1        gameScreen();
 147   1      }
 148          
 149          /**********************
 150          函数名称：void playmusic()
 151          功能描述：播放音乐
 152          入口参数：无
 153          出口参数：无
 154          备注：
 155          
 156          ***********************/
 157          void playmusic()
 158          {
 159   1        uchar p,m,tem;   //m为节拍   
 160   1        uchar i=0;    
 161   1        while(1)   
 162   1        {   
 163   2          p=music[i];      //如果碰到结束符,延时1秒,回到开始再来一遍 
 164   2          if(p==0x00)
 165   2          {
 166   3            i=0;
 167   3            delay(1000);
 168   3          }        
 169   2          else if(p==0xff)   //若碰到休止符,延时100ms,继续取下一音符
 170   2          {
 171   3            i=i+2;
 172   3            delay(100);
 173   3            TR0=0;
 174   3          }      
 175   2          else         //正常情况下取音符和节拍 
 176   2          {
 177   3            tem=quyin(music[i]);    //取出当前音符在quzi数组中的位置值
 178   3            timeh=quzi[tem];      //把音符相应的计时器重装载值赋予timeh和timel
C51 COMPILER V9.51   STC_GAME                                                              09/05/2018 15:34:55 PAGE 4   

 179   3            timel=quzi[tem+1];
 180   3            i++;
 181   3            TH0=timeh;          //把timeh和timel赋予计时器
 182   3            TL0=timel;
 183   3            m=music[i];          //取得节拍
 184   3            i++;
 185   3          } 
 186   2          TR0=1;                                             //开定时器1    
 187   2          delay(m*180);             //等待节拍完成, 通过P3^4口输出音频    
 188   2          TR0=0;                                            //关定时器1 
 189   2               
 190   2         }
 191   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    760    ----
   CONSTANT SIZE    =    152    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     42    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
